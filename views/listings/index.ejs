<% layout("layouts/boilerplate") %>
<%= success %>

<!-- Hero Section -->
<div class="hero-section bg-gradient text-white py-2 mb-2">
  <div class="container">
    <div class="row align-items-center">
      <div class="col-lg-6">
        <% if (typeof isSearch !== 'undefined' && isSearch) { %>
          <h1 class="display-4 fw-bold mb-3">Search Results</h1>
          <p class="lead mb-4">
            <% if (searchQuery) { %>
              Found listings for "<%= searchQuery %>"
              <% if (searchLocation) { %> in <%= searchLocation %><% } %>
            <% } else if (searchLocation) { %>
              Found listings in <%= searchLocation %>
            <% } %>
          </p>
        <% } else { %>
          <h1 class="display-4 fw-bold mb-3">Discover Amazing Places</h1>
          <p class="lead mb-4">Find unique accommodations and experiences around the world</p>
        <% } %>
        <div class="d-flex gap-3">
          <a href="/listings/new" class="btn btn-light btn-lg">
            <i class="fas fa-plus me-2"></i>List Your Place
          </a>
          <a href="#explore" class="btn btn-outline-light btn-lg">
            <i class="fas fa-search me-2"></i>Explore
          </a>
        </div>
      </div>
      <div class="col-lg-6 text-center">
        <i class="fas fa-globe-americas display-1 opacity-75"></i>
      </div>
    </div>
  </div>
</div>

<!-- Search Results Info -->
<% if (typeof isSearch !== 'undefined' && isSearch) { %>
  <div class="container mb-4">
    <div class="alert alert-info d-flex align-items-center justify-content-between">
      <div>
        <i class="fas fa-search me-2"></i>
        <% if (searchQuery) { %>
          Showing results for "<%= searchQuery %>"
          <% if (searchLocation) { %> in <%= searchLocation %><% } %>
        <% } else if (searchLocation) { %>
          Showing results in <%= searchLocation %>
        <% } %>
        <span class="badge bg-primary ms-2"><%= alllistings.length %> listings found</span>
      </div>
      <a href="/listings" class="btn btn-outline-primary btn-sm">
        <i class="fas fa-times me-1"></i>Clear Search
      </a>
    </div>
  </div>
<% } %>

<!-- Filter Bar -->
<div class="filter-container" id="explore">
  <div class="container">
    <div class="d-flex align-items-center flex-nowrap" style="overflow-x: auto; white-space: nowrap;">
      
      <!-- Filter Icons -->
      <% const filters = [
        { icon: 'mountain-sun', label: 'Views', color: '#10b981' },
        { icon: 'water', label: 'Lakefront', color: '#06b6d4' },
        { icon: 'tree', label: 'Cabins', color: '#8b5cf6' },
        { icon: 'city', label: 'City', color: '#f59e0b' },
        { icon: 'fire', label: 'Trending', color: '#ef4444' },
        { icon: 'campground', label: 'Camping', color: '#059669' },
        { icon: 'skiing', label: 'Skiing', color: '#3b82f6' },
        { icon: 'sailboat', label: 'Boating', color: '#0891b2' },
        { icon: 'hiking', label: 'Hiking', color: '#7c3aed' },
        { icon: 'bicycle', label: 'Cycling', color: '#dc2626' },
        { icon: 'wind', label: 'Windy', color: '#84cc16' },
        { icon: 'hot-tub-person', label: 'Hot Tub', color: '#f97316' },
        { icon: 'snowflake', label: 'Winter', color: '#06b6d4' },
        { icon: 'dog', label: 'Pet Friendly', color: '#8b5cf6' }
      ]; %>

      <% filters.forEach((f, index) => { %>
        <div class="filter-item" data-filter="<%= f.label.toLowerCase() %>">
          <div class="filter-icon" style="color: <%= f.color %>;">
            <i class="fa-solid fa-<%= f.icon %> fs-4"></i>
          </div>
          <div class="filter-label"><%= f.label %></div>
        </div>
      <% }) %>

      <!-- Tax Toggle -->
      <div class="tax-toggle ms-4">
        <div class="form-check form-switch d-flex align-items-center gap-3">
          <input class="form-check-input" type="checkbox" id="taxToggle">
          <label class="form-check-label fw-semibold" for="taxToggle">
            <i class="fas fa-receipt me-2"></i>Show Taxes
          </label>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Listings Section -->
<div class="container my-5">
  <div class="row mb-4">
    <div class="col">
      <h2 class="text-gradient mb-0">Featured Listings</h2>
      <p class="text-muted">Discover handpicked accommodations for your next adventure</p>
    </div>
  </div>
  
  <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
    <% for (let listing of alllistings) { %>
      <div class="col fade-in-up" style="animation-delay: <%= Math.random() * 0.5 %>s;">
        <div class="card listing-card h-100 border-0 shadow-sm">
          <div class="position-relative overflow-hidden">
            <img src="<%= listing.image?.url || listing.image %>" class="card-img-top" alt="<%= listing.title %>" style="height: 250px; object-fit: cover;">
            <div class="position-absolute top-0 end-0 m-3">
              <% if (listing._id) { %>
                <button class="btn <%= (currUser && listing.likes && listing.likes.some(like => like.equals(currUser._id))) ? 'btn-danger' : 'btn-light' %> btn-sm rounded-circle shadow-sm like-btn" 
                        data-listing-id="<%= listing._id %>"
                        onclick="toggleLike(this, '<%= listing._id %>')">
                  <i class="fas fa-heart <%= (currUser && listing.likes && listing.likes.some(like => like.equals(currUser._id))) ? 'text-danger' : 'text-muted' %> like-icon"></i>
                </button>
              <% } else { %>
                <button class="btn btn-light btn-sm rounded-circle shadow-sm" title="Sign up to like listings!" onclick="alert('Sign up and create your own listing to use favorites!')">
                  <i class="fas fa-heart text-muted"></i>
                </button>
              <% } %>
            </div>
            <% if (listing.rating) { %>
              <div class="position-absolute bottom-0 start-0 m-3">
                <span class="badge bg-primary rounded-pill">
                  <i class="fas fa-star me-1"></i><%= listing.rating.toFixed(1) %>
                </span>
              </div>
            <% } %>
          </div>
          
          <div class="card-body p-4 d-flex flex-column">
            <div class="d-flex justify-content-between align-items-start mb-3">
              <h5 class="card-title mb-1 flex-grow-1"><%= listing.title %></h5>
              <div class="text-end ms-3">
                <div class="fw-bold text-primary">
                  <% if (listing.price) { %>
                    â‚¹<%= listing.price.toLocaleString("en-IN") %>
                  <% } else { %>
                    N/A
                  <% } %>
                </div>
                <small class="text-muted">per night</small>
              </div>
            </div>
            
            <div class="mb-3">
              <p class="card-text text-muted mb-2">
                <i class="fas fa-map-marker-alt me-1"></i>
                <%= listing.location %><%= listing.country ? ', ' + listing.country : '' %>
              </p>
              
              <% if (listing.type) { %>
                <p class="card-text text-muted mb-2">
                  <i class="fas fa-home me-1"></i>
                  <%= listing.type %>
                </p>
              <% } %>
              
              <% if (listing.host) { %>
                <p class="card-text text-muted mb-3">
                  <i class="fas fa-user me-1"></i>
                  Hosted by <%= listing.host %>
                </p>
              <% } %>
            </div>
            
            <div class="mt-auto">
              <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="d-flex align-items-center gap-2">
                  <% if (listing.amenities && listing.amenities.length > 0) { %>
                    <span class="badge bg-light text-dark rounded-pill">
                      <i class="fas fa-bed me-1"></i><%= listing.amenities[0] %>
                    </span>
                    <% if (listing.amenities.length > 1) { %>
                      <span class="badge bg-light text-dark rounded-pill">
                        <i class="fas fa-bath me-1"></i><%= listing.amenities[1] %>
                      </span>
                    <% } %>
                  <% } else { %>
                    <span class="badge bg-light text-dark rounded-pill">
                      <i class="fas fa-bed me-1"></i>2 beds
                    </span>
                    <span class="badge bg-light text-dark rounded-pill">
                      <i class="fas fa-bath me-1"></i>1 bath
                    </span>
                  <% } %>
                </div>
              </div>
              
              <div class="d-flex justify-content-end">
                <% if (listing._id) { %>
                  <a href="/listings/<%= listing._id %>" class="btn btn-outline-primary btn-sm">
                    <i class="fas fa-eye me-1"></i>View Details
                  </a>
                <% } else { %>
                  <button class="btn btn-primary btn-sm" onclick="alert('This is a featured listing. Sign up to create and view real listings!')">
                    <i class="fas fa-info-circle me-1"></i>Info
                  </button>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
    <% } %>
  </div>
  
  <!-- Load More Button -->
  <div class="text-center mt-5">
    <button class="btn btn-outline-primary btn-lg">
      <i class="fas fa-plus me-2"></i>Load More Listings
    </button>
  </div>
</div>

<!-- Newsletter Section -->
<div class="bg-light py-5 mt-5">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-lg-6 text-center">
        <h3 class="mb-3">Stay Updated</h3>
        <p class="text-muted mb-4">Get the latest deals and travel inspiration delivered to your inbox</p>
        <div class="input-group">
          <input type="email" class="form-control" placeholder="Enter your email address">
          <button class="btn btn-primary">Subscribe</button>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.hero-section {
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--accent-color) 100%);
  position: relative;
  overflow: hidden;
}

.hero-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  opacity: 0.3;
}

.filter-container {
  background: var(--white);
  border-bottom: 1px solid var(--gray-200);
  padding: var(--space-4) 0;
  position: sticky;
  top: 80px;
  z-index: 100;
  backdrop-filter: blur(10px);
}

.filter-item {
  cursor: pointer;
  user-select: none;
  min-width: 80px;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  padding: var(--space-3);
  border-radius: var(--radius-lg);
  transition: all 0.3s ease;
  margin: 0 var(--space-2);
  background-color: var(--gray-50);
  border: 2px solid transparent;
  position: relative;
  overflow: hidden;
}

.filter-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(37, 99, 235, 0.1) 0%, rgba(245, 158, 11, 0.1) 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.filter-item:hover::before {
  opacity: 1;
}

.filter-item:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-lg);
  border-color: var(--primary-color);
}

.filter-item.active {
  background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
  color: var(--white);
  border-color: var(--primary-color);
  transform: translateY(-4px);
  box-shadow: var(--shadow-lg);
}

.filter-icon {
  position: relative;
  z-index: 2;
  transition: transform 0.3s ease;
}

.filter-item:hover .filter-icon {
  transform: scale(1.1);
}

.filter-label {
  font-size: 0.75rem;
  margin-top: var(--space-2);
  font-weight: 500;
  text-align: center;
  line-height: 1.2;
  position: relative;
  z-index: 2;
}

.tax-toggle {
  background: var(--white);
  border: 2px solid var(--gray-200);
  border-radius: var(--radius-xl);
  padding: var(--space-3) var(--space-4);
  box-shadow: var(--shadow-sm);
  white-space: nowrap;
  transition: all 0.3s ease;
}

.tax-toggle:hover {
  border-color: var(--primary-color);
  box-shadow: var(--shadow-md);
}

.form-check-input {
  width: 2.5rem;
  height: 1.25rem;
  cursor: pointer;
  background-color: var(--gray-300);
  border: none;
  transition: all 0.3s ease;
}

.form-check-input:checked {
  background-color: var(--primary-color);
  transform: scale(1.1);
}

.listing-card {
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.listing-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(37, 99, 235, 0.05) 0%, rgba(245, 158, 11, 0.05) 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 1;
}

.listing-card:hover::before {
  opacity: 1;
}

.listing-card:hover {
  transform: translateY(-8px);
  box-shadow: var(--shadow-xl);
}

.card-img-top {
  transition: transform 0.3s ease;
}

.listing-card:hover .card-img-top {
  transform: scale(1.05);
}

.badge {
  font-size: 0.75rem;
  padding: 0.5rem 0.75rem;
}

.btn-outline-primary {
  border-width: 2px;
  font-weight: 500;
  position: relative;
  z-index: 10;
}

.btn-outline-primary:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

@media (max-width: 768px) {
  .hero-section {
    text-align: center;
    padding: var(--space-8) 0;
  }
  
  .filter-item {
    min-width: 70px;
    padding: var(--space-2);
  }
  
  .tax-toggle {
    margin-top: var(--space-3);
  }
}

/* Animation for cards */
.fade-in-up {
  opacity: 0;
  animation: fadeInUp 0.6s ease-out forwards;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
</style>

<script>
// Filter functionality
document.querySelectorAll('.filter-item').forEach(item => {
  item.addEventListener('click', function() {
    // Remove active class from all items
    document.querySelectorAll('.filter-item').forEach(i => i.classList.remove('active'));
    // Add active class to clicked item
    this.classList.add('active');
  });
});

// Tax toggle functionality
const taxToggle = document.getElementById('taxToggle');
const taxInfos = document.getElementsByClassName('tax-info');

taxToggle.addEventListener('change', () => {
  for (let info of taxInfos) {
    info.classList.toggle('d-none');
  }
});

// Smooth scroll for anchor links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute('href'));
    if (target) {
      target.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      });
    }
  });
});

// Add hover effects to cards
document.querySelectorAll('.listing-card').forEach(card => {
  card.addEventListener('mouseenter', function() {
    this.style.transform = 'translateY(-8px)';
  });
  
  card.addEventListener('mouseleave', function() {
    this.style.transform = 'translateY(0)';
  });
});

// Like functionality
function toggleLike(button, listingId) {
  const likeIcon = button.querySelector('.like-icon');
  const isLiked = likeIcon.classList.contains('text-danger');
  
  // Toggle visual state immediately for better UX
  if (isLiked) {
    likeIcon.classList.remove('text-danger');
    likeIcon.classList.add('text-muted');
    button.classList.remove('btn-danger');
    button.classList.add('btn-light');
  } else {
    likeIcon.classList.remove('text-muted');
    likeIcon.classList.add('text-danger');
    button.classList.remove('btn-light');
    button.classList.add('btn-danger');
  }
  
  // Send like/unlike request to server
  fetch('/listings/like', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      listingId: listingId,
      action: isLiked ? 'unlike' : 'like'
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      // Show success message
      showNotification(isLiked ? 'Removed from favorites' : 'Added to favorites', 'success');
    } else {
      // Revert visual state if request failed
      if (isLiked) {
        likeIcon.classList.add('text-danger');
        likeIcon.classList.remove('text-muted');
        button.classList.add('btn-danger');
        button.classList.remove('btn-light');
      } else {
        likeIcon.classList.add('text-muted');
        likeIcon.classList.remove('text-danger');
        button.classList.add('btn-light');
        button.classList.remove('btn-danger');
      }
      showNotification(data.message || 'Something went wrong', 'error');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    // Revert visual state on error
    if (isLiked) {
      likeIcon.classList.add('text-danger');
      likeIcon.classList.remove('text-muted');
      button.classList.add('btn-danger');
      button.classList.remove('btn-light');
    } else {
      likeIcon.classList.add('text-muted');
      likeIcon.classList.remove('text-danger');
      button.classList.add('btn-light');
      button.classList.remove('btn-danger');
    }
    showNotification('Network error. Please try again.', 'error');
  });
}

// Notification function
function showNotification(message, type = 'info') {
  const notification = document.createElement('div');
  notification.className = `alert alert-${type === 'error' ? 'danger' : type} alert-dismissible fade show position-fixed`;
  notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
  notification.innerHTML = `
    ${message}
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  `;
  
  document.body.appendChild(notification);
  
  // Auto remove after 3 seconds
  setTimeout(() => {
    if (notification.parentNode) {
      notification.remove();
    }
  }, 3000);
}

// Check if user is logged in for like functionality
document.addEventListener('DOMContentLoaded', function() {
  const likeButtons = document.querySelectorAll('.like-btn');
  likeButtons.forEach(button => {
    // Check if user is logged in (you can add this check based on your auth system)
    const isLoggedIn = <%= typeof currUser !== 'undefined' && currUser ? 'true' : 'false' %>;
    
    if (!isLoggedIn) {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        showNotification('Please log in to save favorites', 'warning');
      });
    }
  });
});
</script>

